#############################################################################
# Makefile for building: gameaniaque
# Generated by qmake (2.01a) (Qt 4.6.1) on: sam. 22. sept. 11:57:17 2012
# Project:  gameaniaque.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"..\..\libs\SFML-2.0\include" -I"..\..\Libs\Qt\2010.01\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -Wl,-subsystem,console -mthreads -Wl
LIBS        =        C:\libs\SFML-2.0\lib\libsfml-graphics.a C:\libs\SFML-2.0\lib\libsfml-window.a C:\libs\SFML-2.0\lib\libsfml-main.a C:\libs\SFML-2.0\lib\libsfml-system.a 
QMAKE         = c:\libs\qt\2010.01\qt\bin\qmake.exe
IDC           = c:\Libs\Qt\2010.01\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = main.cpp \
		layermanager.cpp \
		layer.cpp 
OBJECTS       = release/main.o \
		release/layermanager.o \
		release/layer.o
DIST          = 
QMAKE_TARGET  = gameaniaque
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = gameaniaque.exe
DESTDIR_TARGET = release\gameaniaque.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec ..\..\Libs\Qt\2010.01\qt\mkspecs\win32-g++ -win32 -o Makefile.Release gameaniaque.pro

dist:
	$(ZIP) gameaniaque.zip $(SOURCES) $(DIST) gameaniaque.pro ..\..\Libs\Qt\2010.01\qt\mkspecs\qconfig.pri ..\..\Libs\Qt\2010.01\qt\mkspecs\features\qt_functions.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\qt_config.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\exclusive_builds.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\default_pre.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\win32\default_pre.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\release.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\debug_and_release.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\default_post.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\win32\default_post.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\build_pass.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\win32\console.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\win32\rtti.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\win32\exceptions.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\win32\stl.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\shared.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\warn_on.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\win32\thread_off.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\resources.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\uic.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\yacc.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\lex.prf ..\..\Libs\Qt\2010.01\qt\mkspecs\features\include_source_dir.prf  RESOURCES FORMS IMAGES YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\main.o release\layermanager.o release\layer.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 



####### Compile

release/main.o: main.cpp layer.h \
		layermanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/layermanager.o: layermanager.cpp layermanager.h \
		layer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\layermanager.o layermanager.cpp

release/layer.o: layer.cpp layer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\layer.o layer.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

